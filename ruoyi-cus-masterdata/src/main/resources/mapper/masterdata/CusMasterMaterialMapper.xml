<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.masterdata.mapper.CusMasterMaterialMapper">
    
    <resultMap type="CusMasterMaterial" id="CusMasterMaterialResult">
        <result property="id"    column="id"    />
        <result property="code"    column="code"    />
        <result property="name"    column="name"    />
        <result property="models"    column="models"    />
        <result property="unit"    column="unit"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectCusMasterMaterialVo">
        select id, code, name, models, unit, create_by, create_time, update_by, update_time from cus_master_material
    </sql>

<!--    check whether material exists by material code-->
    <select id="selectMaterialMasterByCode" parameterType="String" resultMap="CusMasterMaterialResult">
        <include refid="selectCusMasterMaterialVo"/>
        where code = #{code}
    </select>
<!--   material List -->
    <select id="selectCusMasterMaterialList" parameterType="CusMasterMaterial" resultMap="CusMasterMaterialResult">
        <include refid="selectCusMasterMaterialVo"/>
        <where>
            <if test="code != null  and code != ''"> and code = #{code}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
        </where>
    </select>
    
    <select id="selectCusMasterMaterialById" parameterType="Long" resultMap="CusMasterMaterialResult">
        <include refid="selectCusMasterMaterialVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCusMasterMaterial" parameterType="CusMasterMaterial" useGeneratedKeys="true" keyProperty="id">
        insert into cus_master_material
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null and code != ''">code,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="models != null and models != ''">models,</if>
            <if test="unit != null and unit != ''">unit,</if>
            create_by,
            create_time
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null and code != ''">#{code},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="models != null and models != ''">#{models},</if>
            <if test="unit != null and unit != ''">#{unit},</if>
            #{createBy},
            sysdate()
         </trim>
    </insert>

    <update id="updateCusMasterMaterial" parameterType="CusMasterMaterial">
        update cus_master_material
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null and code != ''">code = #{code},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="models != null and models != ''">models = #{models},</if>
            <if test="unit != null and unit != ''">unit = #{unit},</if>
            update_by = #{updateBy},
            update_time = sysdate()
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCusMasterMaterialById" parameterType="Long">
        delete from cus_master_material where id = #{id}
    </delete>

    <delete id="deleteCusMasterMaterialByIds" parameterType="String">
        delete from cus_master_material where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>